// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: tag.sql

package storage

import (
	"context"
)

const getTag = `-- name: GetTag :one
SELECT id FROM tag
WHERE id = $1
`

type GetTagParams struct {
	ID string
}

func (q *Queries) GetTag(ctx context.Context, db DBTX, arg GetTagParams) (string, error) {
	row := db.QueryRowContext(ctx, getTag, arg.ID)
	var id string
	err := row.Scan(&id)
	return id, err
}

const upsertTag = `-- name: UpsertTag :exec
insert into tag (id) values ($1)
on conflict (id) do nothing
`

type UpsertTagParams struct {
	ID string
}

func (q *Queries) UpsertTag(ctx context.Context, db DBTX, arg UpsertTagParams) error {
	_, err := db.ExecContext(ctx, upsertTag, arg.ID)
	return err
}
